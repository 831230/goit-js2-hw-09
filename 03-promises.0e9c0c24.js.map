{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAEpC,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtB,IAAIC,SAAQ,SAACC,EAAQC,GACnCC,YAAW,WACLN,EAEFI,EAAQ,uBAAwCG,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAGtDM,EAAO,sBAAqCE,OAAfT,EAAS,QAAYS,OAANR,EAAM,M,GAEpDA,E,IAGDS,MAAK,SAAAC,G,OAAOC,EAAAlB,GAASmB,OAAOC,QAAQH,E,IACpCI,OAAM,SAAAC,G,OAAKJ,EAAAlB,GAASmB,OAAOI,QAAQD,E,IAYxCpB,EAAKsB,iBAAiB,UATtB,SAAyBC,GACvBA,EAAIC,iBAEJ,IADA,IAAInB,EAAMoB,OAAOzB,EAAKK,MAAMU,OACnBX,EAAW,EAAGA,GAAYJ,EAAK0B,OAAOX,MAAOX,IACpDD,EAAcC,EAASC,GACvBA,GAAOoB,OAAOzB,EAAK2B,KAAKZ,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector(\".form\");\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  \n  const promise = new Promise((resolve,reject)=>{\n    setTimeout(()=>{\n      if (shouldResolve) {\n        // Fulfill\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        // Reject\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    },delay)\n  });\n  promise\n    .then(value=>Notiflix.Notify.success(value))\n    .catch(err=>Notiflix.Notify.failure(err))\n};\n\nfunction operatePromises(evt){\n  evt.preventDefault();\n  let delay=Number(form.delay.value);\n  for (let position = 1; position <= form.amount.value; position++) {\n    createPromise(position,delay);\n    delay+=Number(form.step.value);\n  }\n};\n\nform.addEventListener(\"submit\", operatePromises)"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","concat","then","value","$parcel$interopDefault","Notify","success","catch","err","failure","addEventListener","evt","preventDefault","Number","amount","step"],"version":3,"file":"03-promises.0e9c0c24.js.map"}